import asyncio
import time
from app.HashTable import HashTable
from app.expire import active_deleting

## generated by chatgpt
async def test_active_deleting():
    # Setup
    hash_table = HashTable(32)
    expire_table = HashTable(32)

    # Current time
    now = time.time() * 1000

    # Insert keys: some expired, some not
    keys = ["a", "b", "c", "d", "e"]
    expirations = [
        now - 1000,  # expired
        now + 10000,  # valid
        now - 500,  # expired
        now + 5000,  # valid
        now - 100,  # expired
    ]

    for i, key in enumerate(keys):
        hash_table.set(key, f"value_{key}")
        expire_table.set(key, expirations[i])

    # Run active deletion
    await active_deleting(expire_table, hash_table, 5, 20)

    # Check results
    for i, key in enumerate(keys):
        val = hash_table.get(key)
        status = "expired" if expirations[i] < time.time() * 1000 else "valid"
        print(f"Key: {key}, Status: {status}, Present: {val is not None}")

    print("\nâœ… Active deleting test finished.\n")


if __name__ == "__main__":
    asyncio.run(test_active_deleting())
    print("hello MEGZ112233")
